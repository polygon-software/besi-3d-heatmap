# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Deploy Website

on:
  push:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      - name: Install dependencies
        run: npm ci

      - name: Update Version Number
        id: update_version_number
        uses: polygon-software/npm-version-date@master
        with:
          schema: V.yyMM.P
          V: '1'
          increase-patch: true

      - name: Build application
        run: npm run build

      - name: Stage new / changed files
        run: git add .

      - name: Commit new version number
        uses: polygon-software/action-commit@master
        with:
          commit_message: New Build for development environmet
          commit_options: '--no-verify --signoff'
          file_pattern: .
          commit_user_name: Bot (Autocommit Actions)
          commit_user_email: actions@github.com
          commit_author: Github Action <actions@github.com>
          push_options: '--force'

      - name: Build website
        run: npm run build

      # Deploy to Github Pages
      - name: Deploy Website to Github Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: dist

  create-release:
    name: Auto-Release
    needs: build-application
    runs-on: ubuntu-latest
    steps:
      - name: Create Auto-Release
        uses: polygon-software/action-release@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: latest
          prerelease: false
          title: "${{ needs.increment-version.outputs.version }}"
